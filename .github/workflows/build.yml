# name: Build
# on: 
#   push:
#   pull_request:
#     tags:
#       - "v*"
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]
#     steps:
#       - name: Checkout the Repository
#         uses: actions/checkout@v1

#       - name: Cache node modules
#         uses: actions/checkout@v1
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       # Set up NodeJs Version to use in our project
#       - name: Node ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       # No 'uses' keywords beacuse we want to run script from package.json file
#       - name: Update Docs folder directory
#         run: |
#           npm i
#           npm run build

#       - name: Deploy static files (Github page - into docs folder)
#         uses: peaceiris/actions-gh-pages@v3.7.0-8
#         #  if: ${{ github.ref == 'refs/heads/main' }} # Only main branch
#         with:
#           github_token: ${{secrets.GITHUB_TOKEN}} # set automatically
#           keep_files: false # Keeping existing files
#           # destination_dir: ./docs # The Folder(from publish_dir ) Where gh-page point his html files
#           publish_dir: ./docs # Sources folder to get all html files
#           commit_message: ----> ${{github.event.head_commit.message}} <---- # Set custom commit message
#           force_orphan: true # allows you to make your publish branch with only the latest commit
#           publish_branch: gh-pages # Default=gh-pages. Set Another GitHub Pages Branch, but we want under foder docs!!      
  
#   release:
#     name: Release pushed tag
#     runs-on: ubuntu-latest
#     steps:
#       - name: Create Release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           tag: ${{ github.idtag }}
#         run: |
#           gh release create ${{ github.market-place }}  \
#             --repo= "$market-place" \
#             --title= "${v}" \
#             --latest
#             --generate-notes
            
